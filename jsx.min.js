window.jsx=([...e],...t)=>{let r=[],n=document.createElement("div");return n.innerHTML=e.map((e,n)=>{if(0==n)return e;let i=t[n-1];return i instanceof Array&&(i=jsx.collect(i)),(i instanceof Element||i instanceof DocumentFragment)&&(r.push(i),i=`<jsxplaceholder id="${r.length-1}"></jsxplaceholder>`),i instanceof Function&&(jsx.functions.push(i),i=`"jsx.functions[${jsx.functions.length-1}].call(this, event)"`),i+e}).join(""),function e(t){t?.children&&[...t.children].forEach(t=>{let i=t.getAttributeNames();"JSXPLACEHOLDER"==t.nodeName&&t.replaceWith(r[Number(t.id)]);let s=jsx.registry[t.nodeName];if(s){let l=s.call(t,jsx.attributesToObject(t));t.replaceWith(l),t=l}i.forEach(e=>{let[r,i]=e.split(":");if(i){if("var"==r)window[i]=t;else if("let"==r)!function e(r){r[i]=t,[...r.children].forEach(t=>e(t))}(n);else if("data"==r){let s=t.getAttribute(e);try{s=JSON.parse(s)}catch(l){}t[i]=s}t.hasAttribute(e)&&t.removeAttribute(e)}}),e(t)})}(n),n.children[0]},jsx.script=document.currentScript,jsx.import=async e=>{let t=await fetch(e).then(e=>e.text());return await import(`data:text/javascript;base64,${btoa(jsx.parse(t))}`)},jsx.registry={},jsx.functions=[],jsx.collect=e=>{let t=document.createDocumentFragment();return t.append(...e),t},jsx.attributesToObject=e=>e.getAttributeNames().reduce((t,r)=>{let n=e.getAttribute(r);return n.startsWith("jsx.functions")&&(n=Function("event","return "+n)),{...t,[r]:n||!0}},{}),jsx.parse=e=>{let t=[{type:null}],r=!1;return[...e].reduce((e,n,i,s)=>{let l=t.at(-1);if(r)return r=!1,e+n;if("\\"==n&&"html"!=l.type)return r=!0,e+n;if("string"==l.type)return n==l.string&&t.pop(),"{"==n&&"`"==l.string&&"$"==s[i-1]&&t.push({type:null}),e+n;if("{"==n&&(("html"==l.type||"element"==l.type)&&(n="${"),t.push({type:null})),"}"==n&&t.pop(),"<"==n&&(e.match(/(^|[^\w]|return)[ \r\n]*$/)||"html"==l.type)&&("html"!=l.type&&(n="jsx`"+n),t.push({type:"element",named:!1,name:"",closeTested:!1})),"html"==l.type)return"\\"==n&&(n="\\\\"),"`"==n&&(n="\\`"),e+n;if("element"==l.type){if(!l.closeTested){if("/"==n)return l.close=!0,e+n;l.closeTested=!0}return l.named||(n.match(/\w/)?l.name+=n:(l.named=!0,l.name.match(/^[A-Z]/)&&!l.close&&(e=e.replace(/(\w+)$/,`\${(jsx.registry.${l.name.toUpperCase()}=$1,"$1")}`)))),">"==n&&(t.pop(),e.endsWith("/")||l.close?(l.close&&t.pop(),"html"!=t.at(-1).type&&(n+="`")):t.push({type:"html"})),e+n}return("'"==n||'"'==n||"`"==n)&&t.push({type:"string",string:n}),e+n},"").replace(/^ *(import)( *\w* *)?(, *)?{?(.*?)}?( *from *)?(".+?")/gm,(e,t,r,n,i,s,l)=>`let {${r.trim()?`default: ${r}`:""}${r.trim()&&i?",":""}${i}} = await jsx.import(${l})`)},new MutationObserver(e=>{for(let{addedNodes:t}of e)for(let r of t)if("SCRIPT"==r.nodeName&&r.hasAttribute("jsx")&&"compiled"!=r.getAttribute("jsx")){if(r.innerHTML.match(/^ *import/gm)&&r.setAttribute("async",""),r.src){fetch(r.src).then(e=>e.text()).then(e=>{r.innerHTML=jsx.parse(e);let t=document.createElement("script");r.replaceWith(t),t.replaceWith(r),r.setAttribute("jsx","compiled")}),r.removeAttribute("src");return}r.innerHTML=jsx.parse(r.innerHTML),r.setAttribute("jsx","compiled")}}).observe(document,{subtree:!0,childList:!0});