window.jsx=([...e],...t)=>{let r=[],i=document.createElement("div");return(i.innerHTML=e.map((e,i)=>{if(0==i)return e;let n=t[i-1];return n instanceof Array&&(n=jsx.collect(n)),(n instanceof Element||n instanceof DocumentFragment)&&(r.push(n),n=`<jsxplaceholder id="${r.length-1}"></jsxplaceholder>`),n instanceof Function&&(jsx.functions.push(n),n=`"jsx.functions[${jsx.functions.length-1}].call(this, event)"`),n+e}).join(""),jsx.filterChildren(i),i.children.length>1)?jsx.collect(i.children):i.children[0]},jsx.filterChildren=e=>{e?.children&&[...e.children].forEach(e=>{let t=e.getAttributeNames();"JSXPLACEHOLDER"==e.nodeName&&e.replaceWith(elements[Number(e.id)]);let r=jsx.registry[e.nodeName];if(r){let i=r.call(e,jsx.attributesToObject(e));e.getAttributeNames().forEach(t=>i.setAttribute(t,e.getAttribute(t))),e.replaceWith(i),e=i}t.forEach(t=>{let[r,i]=t.split(":");if(i){if("var"==r)window[i]=e;else if("let"==r)!function t(r){r[i]=e,[...r.children].forEach(e=>t(e))}(div);else if("data"==r){let n=e.getAttribute(t);try{n=JSON.parse(n)}catch(l){}e[i]=n}e.hasAttribute(t)&&e.removeAttribute(t)}}),jsx.filterChildren(e)})},jsx.script=document.currentScript,jsx.import=async e=>{let t=await fetch(e).then(e=>e.text());return await import(`data:text/javascript;base64,${btoa(jsx.parse(t))}`)},jsx.registry={"JSX:COLLECTION"(){return jsx.filterChildren(this),jsx.collect(this.children)}},jsx.functions=[],jsx.collect=e=>{let t=document.createDocumentFragment();return t.append(...e),t},jsx.attributesToObject=e=>e.getAttributeNames().reduce((t,r)=>{let i=e.getAttribute(r);return i.startsWith("jsx.functions")&&(i=Function("event","return "+i)),{...t,[r]:i||!0}},{}),jsx.parse=e=>{let t=[{type:null}],r=!1;return[...e].reduce((e,i,n,l)=>{let s=t.at(-1);if(r)return r=!1,e+i;if("\\"==i&&"html"!=s.type)return r=!0,e+i;if("string"==s.type)return i==s.string&&t.pop(),"{"==i&&"`"==s.string&&"$"==l[n-1]&&t.push({type:null}),e+i;if("{"==i&&(("html"==s.type||"element"==s.type)&&(i="${"),t.push({type:null})),"}"==i&&t.pop(),"<"==i&&(e.match(/(^|[^\w]|return)[ \r\n]*$/)||"html"==s.type)&&("html"!=s.type&&(i="jsx`"+i),t.push({type:"element",named:!1,name:"",closeTested:!1})),"html"==s.type)return"\\"==i&&(i="\\\\"),"`"==i&&(i="\\`"),e+i;if("element"==s.type){if(!s.closeTested){if("/"==i)return s.close=!0,e+i;s.closeTested=!0}return s.named||(i.match(/\w/)?s.name+=i:(s.named=!0,s.name.match(/^[A-Z]/)&&!s.close&&(e=e.replace(/(\w+)$/,`\${(jsx.registry.${s.name.toUpperCase()}=$1,"$1")}`)),s.name||(e+="jsx:collection"))),">"==i&&(t.pop(),e.endsWith("/")||s.close?(s.close&&t.pop(),"html"!=t.at(-1).type&&(i+="`")):t.push({type:"html"})),e+i}return("'"==i||'"'==i||"`"==i)&&t.push({type:"string",string:i}),e+i},"").replace(/^ *(import)( *\w* *)?(, *)?{?(.*?)}?( *from *)?(".+?")/gm,(e,t,r,i,n,l,s)=>`let {${r.trim()?`default: ${r}`:""}${r.trim()&&n?",":""}${n}} = await jsx.import(${s})`)},new MutationObserver(e=>{for(let{addedNodes:t}of e)for(let r of t)if("SCRIPT"==r.nodeName&&r.hasAttribute("jsx")&&"compiled"!=r.getAttribute("jsx")){if(r.innerHTML.match(/^ *import/gm)&&r.setAttribute("async",""),r.src){fetch(r.src).then(e=>e.text()).then(e=>{r.innerHTML=jsx.parse(e);let t=document.createElement("script");r.replaceWith(t),t.replaceWith(r),r.setAttribute("jsx","compiled")}),r.removeAttribute("src");return}r.innerHTML=jsx.parse(r.innerHTML),r.setAttribute("jsx","compiled")}}).observe(document,{subtree:!0,childList:!0});